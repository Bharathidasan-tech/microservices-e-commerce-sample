spring:
  application.name: shopping-customer-service
  datasource:
    tomcat:
      test-while-idle: true
      validation-query: SELECT 1
  jackson:
    serialization:
      indent-output: true
      
server:
  servlet:
    context-path: /
  port: 8082

---
# DEV CONFIGURATION
spring:
  profiles: dev
  cloud:
    consul:
      host: consul
      port: 8500
      discovery:
        hostname: shopping-customer-service
        instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}}
        healthCheckPath: /actuator/health
        healthCheckInterval: 15s
    loadbalancer:
      ribbon:
        enabled: false
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
  datasource:
    url: jdbc:h2:mem:customer-service
    driver-class-name: org.h2.Driver
    username: bharathi
    password: bharathi
  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.H2Dialect
    show-sql: true
logging:
  level:
    '[org.springframework.web]': warn
    '[com.bharathi.shopping]': info 
---
# DOCKER CONFIGURATION
spring:
  profiles:
    active:
      - docker
  autoconfigure:
    exclude:
    - org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration
  cloud:
    consul:
      host: consul
      port: 8500
      discovery:
        hostname: shopping-customer-service
        instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}}
        healthCheckPath: /actuator/health
        healthCheckInterval: 50s
    loadbalancer:
      ribbon:
        enabled: false
  datasource:
    url: jdbc:mysql://customer-service-db/customerservice?createDatabaseIfNotExist=true
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: customerdb
    password: customerdb
    initialization-mode:  always
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    database-platform: org.hibernate.dialect.MySQL57Dialect
    show-sql: true
logging:
  level:
    '[org.springframework.web]': warn
    '[com.bharathi.shopping]': info

---
#oauth2 configuration
security:
  oauth2:
    resource:
      token-info-uri: http://shopping-auth-service:9090/oauth/check_token
    client:
      client-id: web
      client-secret: pin        


